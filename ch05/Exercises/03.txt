(a) i = 3; j = 4; k = 5;
    printf("%d ", i < j || ++j < k);
    printf("%d %d %d", i, j, k);

    i < j || (++j) < k
    (i < j) || ((++j) < k) 
    ((i < j) || ((++j) < k))
    
    3 < 4 || (j = 4 + 1) < 5
    (3 < 4) || (5 < 5)
    1 || 0
    1
    
    Expected output:
    1 3 (4 or 5) 5
    unsure of the value printed for j due to undefined behavior (when the side effect of assigning j 
    the value 5 is carried out).

(b) i = 7; j = 8; k = 9;
    printf("%d ", i - 7 && j++ < k);
    printf("%d %d %d", i, j, k);

    i - 7 && (j++) < k
    (i - 7) && (j++) < k
    (i - 7) && ((j++) < k)
    ((i - 7) && ((j++) < k))

    7 - 7 && (j++) < 9
    (7 - 7) && 8 < 9
    0 && (8 < 9)
    0 && 1
    0

    Expected output:
    0 7 8 9
    
(c) i = 7; j = 8; k = 9;
    printf("%d ", (i = j) || (j = k));
    printf("%d %d %d", i, j, k);

    (i = j) || (j = k)
    8 || 8
    1

    Expected output:
    1 8 9 9

(d) i = 1; j = 1; k = 1;
    printf("%d ", ++i || ++j && ++k);
    printf("%d %d %d", i, j, k);

    (++i) || (++j) && (++k)
    (++i) || ((++j) && (++k))
    ((++i) || ((++j) && (++k)))

    ((++i) || ((++j) && (k = 1 + 1)))
    ((++i) || ((j = 1 + 1) && 2))
    ((i = i + 1) || (2 && 2))
    (2 || 1)
    1

    Expected output
    1 (1 or 2) (1 or 2) (1 or 2)
    unsure of the values printed for i, j and k due to undefined behavior (when the side effects of 
    assigning i, j and k their values of 2 occur.)
    
